Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right 
which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.

Example:

Input:
[
  [1,3,1],
  [1,5,1],
  [4,2,1]
]
Output: 7
Explanation: Because the path 1→3→1→1→1 minimizes the sum.

---------------------------------------------------------------------------------------------

class Solution {
    public int minPathSum(int[][] arr) {
        for(int i = 0; i<arr.length; i++){
            for(int j = 0; j<arr[0].length; j++){
                if(i == 0 && j>0){
                    arr[i][j] = arr[i][j]+arr[i][j-1];
                }
                else if(j == 0 && i>0){
                    arr[i][j] = arr[i][j] + arr[i-1][j]; 
                }else if(i!=0 && j!=0){
                    arr[i][j] += Math.min(arr[i-1][j], arr[i][j-1]); 
                }
            }
        }
        return arr[arr.length-1][arr[0].length-1];
    }
}